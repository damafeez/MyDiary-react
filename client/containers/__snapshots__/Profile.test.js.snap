// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Profile
    entries={
      Array [
        Object {
          "body": "this body",
          "id": 1,
          "title": "this title",
        },
      ]
    }
    updatePassword={[Function]}
    updateProfile={[Function]}
    user={
      Object {
        "email": "test@gmail.c",
        "fullName": "Afeez Awoyemi",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <section
        className="info-settings"
      >
        <div
          className="settings"
        >
          <ProfileImageUploader
            name="image"
          />
          <div>
            <div
              className="header"
              onClick={[Function]}
            >
              <span>
                EDIT PROFILE
              </span>
              <svg
                className="icon"
              >
                <use
                  xlinkHref="[object Object]#icon-user"
                />
              </svg>
            </div>
            <form
              className="open-close "
              onSubmit={[Function]}
            >
              <_default
                handleChange={[Function]}
                icon="icon-user"
                label="Full Name"
                name="fullName"
                required={true}
                value="Afeez Awoyemi"
              />
              <_default
                handleChange={[Function]}
                icon="icon-at-sign"
                label="Email"
                name="email"
                required={true}
                value="test@gmail.c"
              />
              <button
                className="round btn"
                name="button"
                type="submit"
              >
                Update
              </button>
            </form>
          </div>
          <div>
            <div
              className="header"
              onClick={[Function]}
            >
              <span>
                CHANGE PASSWORD
              </span>
              <svg
                className="icon"
              >
                <use
                  xlinkHref="[object Object]#icon-unlock"
                />
              </svg>
            </div>
            <form
              className="open-close "
              onSubmit={[Function]}
            >
              <_default
                handleChange={[Function]}
                icon="icon-unlock"
                label="Current Password"
                name="password"
                required={true}
                type="password"
                value=""
              />
              <_default
                handleChange={[Function]}
                icon="icon-unlock"
                label="New Password"
                name="newPassword"
                required={true}
                type="password"
                value=""
              />
              <_default
                handleChange={[Function]}
                icon="icon-unlock"
                label="Confirm Password"
                name="confirmPassword"
                required={true}
                type="password"
                value=""
              />
              <button
                className="round btn"
                name="button"
                type="submit"
              >
                Update
              </button>
            </form>
          </div>
          <div>
            <div
              className="header check"
            >
              <label
                htmlFor="show-notification"
              >
                SHOW DAILY REMINDER
              </label>
              <input
                id="show-notification"
                name="reminder"
                type="checkbox"
              />
            </div>
          </div>
          <button
            className="btn round logout"
            type="button"
          >
            Logout
          </button>
        </div>
        <div
          className="info"
        >
          <span
            id="number"
          >
            1
          </span>
          <span
            id="title"
          >
            ENTRY
             ADDED
          </span>
          <h2>
            Afeez Awoyemi
          </h2>
          <p>
            test@gmail.c
          </p>
        </div>
      </section>,
      "className": "profile",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="settings"
          >
            <ProfileImageUploader
              name="image"
            />
            <div>
              <div
                className="header"
                onClick={[Function]}
              >
                <span>
                  EDIT PROFILE
                </span>
                <svg
                  className="icon"
                >
                  <use
                    xlinkHref="[object Object]#icon-user"
                  />
                </svg>
              </div>
              <form
                className="open-close "
                onSubmit={[Function]}
              >
                <_default
                  handleChange={[Function]}
                  icon="icon-user"
                  label="Full Name"
                  name="fullName"
                  required={true}
                  value="Afeez Awoyemi"
                />
                <_default
                  handleChange={[Function]}
                  icon="icon-at-sign"
                  label="Email"
                  name="email"
                  required={true}
                  value="test@gmail.c"
                />
                <button
                  className="round btn"
                  name="button"
                  type="submit"
                >
                  Update
                </button>
              </form>
            </div>
            <div>
              <div
                className="header"
                onClick={[Function]}
              >
                <span>
                  CHANGE PASSWORD
                </span>
                <svg
                  className="icon"
                >
                  <use
                    xlinkHref="[object Object]#icon-unlock"
                  />
                </svg>
              </div>
              <form
                className="open-close "
                onSubmit={[Function]}
              >
                <_default
                  handleChange={[Function]}
                  icon="icon-unlock"
                  label="Current Password"
                  name="password"
                  required={true}
                  type="password"
                  value=""
                />
                <_default
                  handleChange={[Function]}
                  icon="icon-unlock"
                  label="New Password"
                  name="newPassword"
                  required={true}
                  type="password"
                  value=""
                />
                <_default
                  handleChange={[Function]}
                  icon="icon-unlock"
                  label="Confirm Password"
                  name="confirmPassword"
                  required={true}
                  type="password"
                  value=""
                />
                <button
                  className="round btn"
                  name="button"
                  type="submit"
                >
                  Update
                </button>
              </form>
            </div>
            <div>
              <div
                className="header check"
              >
                <label
                  htmlFor="show-notification"
                >
                  SHOW DAILY REMINDER
                </label>
                <input
                  id="show-notification"
                  name="reminder"
                  type="checkbox"
                />
              </div>
            </div>
            <button
              className="btn round logout"
              type="button"
            >
              Logout
            </button>
          </div>,
          <div
            className="info"
          >
            <span
              id="number"
            >
              1
            </span>
            <span
              id="title"
            >
              ENTRY
               ADDED
            </span>
            <h2>
              Afeez Awoyemi
            </h2>
            <p>
              test@gmail.c
            </p>
          </div>,
        ],
        "className": "info-settings",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ProfileImageUploader
                name="image"
              />,
              <div>
                <div
                  className="header"
                  onClick={[Function]}
                >
                  <span>
                    EDIT PROFILE
                  </span>
                  <svg
                    className="icon"
                  >
                    <use
                      xlinkHref="[object Object]#icon-user"
                    />
                  </svg>
                </div>
                <form
                  className="open-close "
                  onSubmit={[Function]}
                >
                  <_default
                    handleChange={[Function]}
                    icon="icon-user"
                    label="Full Name"
                    name="fullName"
                    required={true}
                    value="Afeez Awoyemi"
                  />
                  <_default
                    handleChange={[Function]}
                    icon="icon-at-sign"
                    label="Email"
                    name="email"
                    required={true}
                    value="test@gmail.c"
                  />
                  <button
                    className="round btn"
                    name="button"
                    type="submit"
                  >
                    Update
                  </button>
                </form>
              </div>,
              <div>
                <div
                  className="header"
                  onClick={[Function]}
                >
                  <span>
                    CHANGE PASSWORD
                  </span>
                  <svg
                    className="icon"
                  >
                    <use
                      xlinkHref="[object Object]#icon-unlock"
                    />
                  </svg>
                </div>
                <form
                  className="open-close "
                  onSubmit={[Function]}
                >
                  <_default
                    handleChange={[Function]}
                    icon="icon-unlock"
                    label="Current Password"
                    name="password"
                    required={true}
                    type="password"
                    value=""
                  />
                  <_default
                    handleChange={[Function]}
                    icon="icon-unlock"
                    label="New Password"
                    name="newPassword"
                    required={true}
                    type="password"
                    value=""
                  />
                  <_default
                    handleChange={[Function]}
                    icon="icon-unlock"
                    label="Confirm Password"
                    name="confirmPassword"
                    required={true}
                    type="password"
                    value=""
                  />
                  <button
                    className="round btn"
                    name="button"
                    type="submit"
                  >
                    Update
                  </button>
                </form>
              </div>,
              <div>
                <div
                  className="header check"
                >
                  <label
                    htmlFor="show-notification"
                  >
                    SHOW DAILY REMINDER
                  </label>
                  <input
                    id="show-notification"
                    name="reminder"
                    type="checkbox"
                  />
                </div>
              </div>,
              <button
                className="btn round logout"
                type="button"
              >
                Logout
              </button>,
            ],
            "className": "settings",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "loading": undefined,
                "name": "image",
                "profileImage": undefined,
                "uploadImage": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="header"
                    onClick={[Function]}
                  >
                    <span>
                      EDIT PROFILE
                    </span>
                    <svg
                      className="icon"
                    >
                      <use
                        xlinkHref="[object Object]#icon-user"
                      />
                    </svg>
                  </div>,
                  <form
                    className="open-close "
                    onSubmit={[Function]}
                  >
                    <_default
                      handleChange={[Function]}
                      icon="icon-user"
                      label="Full Name"
                      name="fullName"
                      required={true}
                      value="Afeez Awoyemi"
                    />
                    <_default
                      handleChange={[Function]}
                      icon="icon-at-sign"
                      label="Email"
                      name="email"
                      required={true}
                      value="test@gmail.c"
                    />
                    <button
                      className="round btn"
                      name="button"
                      type="submit"
                    >
                      Update
                    </button>
                  </form>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        EDIT PROFILE
                      </span>,
                      <svg
                        className="icon"
                      >
                        <use
                          xlinkHref="[object Object]#icon-user"
                        />
                      </svg>,
                    ],
                    "className": "header",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "EDIT PROFILE",
                      },
                      "ref": null,
                      "rendered": "EDIT PROFILE",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <use
                          xlinkHref="[object Object]#icon-user"
                        />,
                        "className": "icon",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "xlinkHref": "[object Object]#icon-user",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "use",
                      },
                      "type": "svg",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <_default
                        handleChange={[Function]}
                        icon="icon-user"
                        label="Full Name"
                        name="fullName"
                        required={true}
                        value="Afeez Awoyemi"
                      />,
                      <_default
                        handleChange={[Function]}
                        icon="icon-at-sign"
                        label="Email"
                        name="email"
                        required={true}
                        value="test@gmail.c"
                      />,
                      <button
                        className="round btn"
                        name="button"
                        type="submit"
                      >
                        Update
                      </button>,
                    ],
                    "className": "open-close ",
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "handleChange": [Function],
                        "icon": "icon-user",
                        "label": "Full Name",
                        "name": "fullName",
                        "required": true,
                        "value": "Afeez Awoyemi",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "handleChange": [Function],
                        "icon": "icon-at-sign",
                        "label": "Email",
                        "name": "email",
                        "required": true,
                        "value": "test@gmail.c",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Update",
                        "className": "round btn",
                        "disabled": undefined,
                        "name": "button",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Update",
                      "type": "button",
                    },
                  ],
                  "type": "form",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="header"
                    onClick={[Function]}
                  >
                    <span>
                      CHANGE PASSWORD
                    </span>
                    <svg
                      className="icon"
                    >
                      <use
                        xlinkHref="[object Object]#icon-unlock"
                      />
                    </svg>
                  </div>,
                  <form
                    className="open-close "
                    onSubmit={[Function]}
                  >
                    <_default
                      handleChange={[Function]}
                      icon="icon-unlock"
                      label="Current Password"
                      name="password"
                      required={true}
                      type="password"
                      value=""
                    />
                    <_default
                      handleChange={[Function]}
                      icon="icon-unlock"
                      label="New Password"
                      name="newPassword"
                      required={true}
                      type="password"
                      value=""
                    />
                    <_default
                      handleChange={[Function]}
                      icon="icon-unlock"
                      label="Confirm Password"
                      name="confirmPassword"
                      required={true}
                      type="password"
                      value=""
                    />
                    <button
                      className="round btn"
                      name="button"
                      type="submit"
                    >
                      Update
                    </button>
                  </form>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span>
                        CHANGE PASSWORD
                      </span>,
                      <svg
                        className="icon"
                      >
                        <use
                          xlinkHref="[object Object]#icon-unlock"
                        />
                      </svg>,
                    ],
                    "className": "header",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "CHANGE PASSWORD",
                      },
                      "ref": null,
                      "rendered": "CHANGE PASSWORD",
                      "type": "span",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <use
                          xlinkHref="[object Object]#icon-unlock"
                        />,
                        "className": "icon",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "xlinkHref": "[object Object]#icon-unlock",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "use",
                      },
                      "type": "svg",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <_default
                        handleChange={[Function]}
                        icon="icon-unlock"
                        label="Current Password"
                        name="password"
                        required={true}
                        type="password"
                        value=""
                      />,
                      <_default
                        handleChange={[Function]}
                        icon="icon-unlock"
                        label="New Password"
                        name="newPassword"
                        required={true}
                        type="password"
                        value=""
                      />,
                      <_default
                        handleChange={[Function]}
                        icon="icon-unlock"
                        label="Confirm Password"
                        name="confirmPassword"
                        required={true}
                        type="password"
                        value=""
                      />,
                      <button
                        className="round btn"
                        name="button"
                        type="submit"
                      >
                        Update
                      </button>,
                    ],
                    "className": "open-close ",
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "handleChange": [Function],
                        "icon": "icon-unlock",
                        "label": "Current Password",
                        "name": "password",
                        "required": true,
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "handleChange": [Function],
                        "icon": "icon-unlock",
                        "label": "New Password",
                        "name": "newPassword",
                        "required": true,
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "handleChange": [Function],
                        "icon": "icon-unlock",
                        "label": "Confirm Password",
                        "name": "confirmPassword",
                        "required": true,
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Update",
                        "className": "round btn",
                        "disabled": undefined,
                        "name": "button",
                        "type": "submit",
                      },
                      "ref": null,
                      "rendered": "Update",
                      "type": "button",
                    },
                  ],
                  "type": "form",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="header check"
                >
                  <label
                    htmlFor="show-notification"
                  >
                    SHOW DAILY REMINDER
                  </label>
                  <input
                    id="show-notification"
                    name="reminder"
                    type="checkbox"
                  />
                </div>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="show-notification"
                    >
                      SHOW DAILY REMINDER
                    </label>,
                    <input
                      id="show-notification"
                      name="reminder"
                      type="checkbox"
                    />,
                  ],
                  "className": "header check",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "SHOW DAILY REMINDER",
                      "htmlFor": "show-notification",
                    },
                    "ref": null,
                    "rendered": "SHOW DAILY REMINDER",
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "id": "show-notification",
                      "name": "reminder",
                      "type": "checkbox",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Logout",
                "className": "btn round logout",
                "onClick": undefined,
                "type": "button",
              },
              "ref": null,
              "rendered": "Logout",
              "type": "button",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                id="number"
              >
                1
              </span>,
              <span
                id="title"
              >
                ENTRY
                 ADDED
              </span>,
              <h2>
                Afeez Awoyemi
              </h2>,
              <p>
                test@gmail.c
              </p>,
            ],
            "className": "info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 1,
                "id": "number",
              },
              "ref": null,
              "rendered": 1,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "ENTRY",
                  " ADDED",
                ],
                "id": "title",
              },
              "ref": null,
              "rendered": Array [
                "ENTRY",
                " ADDED",
              ],
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Afeez Awoyemi",
              },
              "ref": null,
              "rendered": "Afeez Awoyemi",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test@gmail.c",
              },
              "ref": null,
              "rendered": "test@gmail.c",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "section",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <section
          className="info-settings"
        >
          <div
            className="settings"
          >
            <ProfileImageUploader
              name="image"
            />
            <div>
              <div
                className="header"
                onClick={[Function]}
              >
                <span>
                  EDIT PROFILE
                </span>
                <svg
                  className="icon"
                >
                  <use
                    xlinkHref="[object Object]#icon-user"
                  />
                </svg>
              </div>
              <form
                className="open-close "
                onSubmit={[Function]}
              >
                <_default
                  handleChange={[Function]}
                  icon="icon-user"
                  label="Full Name"
                  name="fullName"
                  required={true}
                  value="Afeez Awoyemi"
                />
                <_default
                  handleChange={[Function]}
                  icon="icon-at-sign"
                  label="Email"
                  name="email"
                  required={true}
                  value="test@gmail.c"
                />
                <button
                  className="round btn"
                  name="button"
                  type="submit"
                >
                  Update
                </button>
              </form>
            </div>
            <div>
              <div
                className="header"
                onClick={[Function]}
              >
                <span>
                  CHANGE PASSWORD
                </span>
                <svg
                  className="icon"
                >
                  <use
                    xlinkHref="[object Object]#icon-unlock"
                  />
                </svg>
              </div>
              <form
                className="open-close "
                onSubmit={[Function]}
              >
                <_default
                  handleChange={[Function]}
                  icon="icon-unlock"
                  label="Current Password"
                  name="password"
                  required={true}
                  type="password"
                  value=""
                />
                <_default
                  handleChange={[Function]}
                  icon="icon-unlock"
                  label="New Password"
                  name="newPassword"
                  required={true}
                  type="password"
                  value=""
                />
                <_default
                  handleChange={[Function]}
                  icon="icon-unlock"
                  label="Confirm Password"
                  name="confirmPassword"
                  required={true}
                  type="password"
                  value=""
                />
                <button
                  className="round btn"
                  name="button"
                  type="submit"
                >
                  Update
                </button>
              </form>
            </div>
            <div>
              <div
                className="header check"
              >
                <label
                  htmlFor="show-notification"
                >
                  SHOW DAILY REMINDER
                </label>
                <input
                  id="show-notification"
                  name="reminder"
                  type="checkbox"
                />
              </div>
            </div>
            <button
              className="btn round logout"
              type="button"
            >
              Logout
            </button>
          </div>
          <div
            className="info"
          >
            <span
              id="number"
            >
              1
            </span>
            <span
              id="title"
            >
              ENTRY
               ADDED
            </span>
            <h2>
              Afeez Awoyemi
            </h2>
            <p>
              test@gmail.c
            </p>
          </div>
        </section>,
        "className": "profile",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="settings"
            >
              <ProfileImageUploader
                name="image"
              />
              <div>
                <div
                  className="header"
                  onClick={[Function]}
                >
                  <span>
                    EDIT PROFILE
                  </span>
                  <svg
                    className="icon"
                  >
                    <use
                      xlinkHref="[object Object]#icon-user"
                    />
                  </svg>
                </div>
                <form
                  className="open-close "
                  onSubmit={[Function]}
                >
                  <_default
                    handleChange={[Function]}
                    icon="icon-user"
                    label="Full Name"
                    name="fullName"
                    required={true}
                    value="Afeez Awoyemi"
                  />
                  <_default
                    handleChange={[Function]}
                    icon="icon-at-sign"
                    label="Email"
                    name="email"
                    required={true}
                    value="test@gmail.c"
                  />
                  <button
                    className="round btn"
                    name="button"
                    type="submit"
                  >
                    Update
                  </button>
                </form>
              </div>
              <div>
                <div
                  className="header"
                  onClick={[Function]}
                >
                  <span>
                    CHANGE PASSWORD
                  </span>
                  <svg
                    className="icon"
                  >
                    <use
                      xlinkHref="[object Object]#icon-unlock"
                    />
                  </svg>
                </div>
                <form
                  className="open-close "
                  onSubmit={[Function]}
                >
                  <_default
                    handleChange={[Function]}
                    icon="icon-unlock"
                    label="Current Password"
                    name="password"
                    required={true}
                    type="password"
                    value=""
                  />
                  <_default
                    handleChange={[Function]}
                    icon="icon-unlock"
                    label="New Password"
                    name="newPassword"
                    required={true}
                    type="password"
                    value=""
                  />
                  <_default
                    handleChange={[Function]}
                    icon="icon-unlock"
                    label="Confirm Password"
                    name="confirmPassword"
                    required={true}
                    type="password"
                    value=""
                  />
                  <button
                    className="round btn"
                    name="button"
                    type="submit"
                  >
                    Update
                  </button>
                </form>
              </div>
              <div>
                <div
                  className="header check"
                >
                  <label
                    htmlFor="show-notification"
                  >
                    SHOW DAILY REMINDER
                  </label>
                  <input
                    id="show-notification"
                    name="reminder"
                    type="checkbox"
                  />
                </div>
              </div>
              <button
                className="btn round logout"
                type="button"
              >
                Logout
              </button>
            </div>,
            <div
              className="info"
            >
              <span
                id="number"
              >
                1
              </span>
              <span
                id="title"
              >
                ENTRY
                 ADDED
              </span>
              <h2>
                Afeez Awoyemi
              </h2>
              <p>
                test@gmail.c
              </p>
            </div>,
          ],
          "className": "info-settings",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <ProfileImageUploader
                  name="image"
                />,
                <div>
                  <div
                    className="header"
                    onClick={[Function]}
                  >
                    <span>
                      EDIT PROFILE
                    </span>
                    <svg
                      className="icon"
                    >
                      <use
                        xlinkHref="[object Object]#icon-user"
                      />
                    </svg>
                  </div>
                  <form
                    className="open-close "
                    onSubmit={[Function]}
                  >
                    <_default
                      handleChange={[Function]}
                      icon="icon-user"
                      label="Full Name"
                      name="fullName"
                      required={true}
                      value="Afeez Awoyemi"
                    />
                    <_default
                      handleChange={[Function]}
                      icon="icon-at-sign"
                      label="Email"
                      name="email"
                      required={true}
                      value="test@gmail.c"
                    />
                    <button
                      className="round btn"
                      name="button"
                      type="submit"
                    >
                      Update
                    </button>
                  </form>
                </div>,
                <div>
                  <div
                    className="header"
                    onClick={[Function]}
                  >
                    <span>
                      CHANGE PASSWORD
                    </span>
                    <svg
                      className="icon"
                    >
                      <use
                        xlinkHref="[object Object]#icon-unlock"
                      />
                    </svg>
                  </div>
                  <form
                    className="open-close "
                    onSubmit={[Function]}
                  >
                    <_default
                      handleChange={[Function]}
                      icon="icon-unlock"
                      label="Current Password"
                      name="password"
                      required={true}
                      type="password"
                      value=""
                    />
                    <_default
                      handleChange={[Function]}
                      icon="icon-unlock"
                      label="New Password"
                      name="newPassword"
                      required={true}
                      type="password"
                      value=""
                    />
                    <_default
                      handleChange={[Function]}
                      icon="icon-unlock"
                      label="Confirm Password"
                      name="confirmPassword"
                      required={true}
                      type="password"
                      value=""
                    />
                    <button
                      className="round btn"
                      name="button"
                      type="submit"
                    >
                      Update
                    </button>
                  </form>
                </div>,
                <div>
                  <div
                    className="header check"
                  >
                    <label
                      htmlFor="show-notification"
                    >
                      SHOW DAILY REMINDER
                    </label>
                    <input
                      id="show-notification"
                      name="reminder"
                      type="checkbox"
                    />
                  </div>
                </div>,
                <button
                  className="btn round logout"
                  type="button"
                >
                  Logout
                </button>,
              ],
              "className": "settings",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "loading": undefined,
                  "name": "image",
                  "profileImage": undefined,
                  "uploadImage": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="header"
                      onClick={[Function]}
                    >
                      <span>
                        EDIT PROFILE
                      </span>
                      <svg
                        className="icon"
                      >
                        <use
                          xlinkHref="[object Object]#icon-user"
                        />
                      </svg>
                    </div>,
                    <form
                      className="open-close "
                      onSubmit={[Function]}
                    >
                      <_default
                        handleChange={[Function]}
                        icon="icon-user"
                        label="Full Name"
                        name="fullName"
                        required={true}
                        value="Afeez Awoyemi"
                      />
                      <_default
                        handleChange={[Function]}
                        icon="icon-at-sign"
                        label="Email"
                        name="email"
                        required={true}
                        value="test@gmail.c"
                      />
                      <button
                        className="round btn"
                        name="button"
                        type="submit"
                      >
                        Update
                      </button>
                    </form>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          EDIT PROFILE
                        </span>,
                        <svg
                          className="icon"
                        >
                          <use
                            xlinkHref="[object Object]#icon-user"
                          />
                        </svg>,
                      ],
                      "className": "header",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "EDIT PROFILE",
                        },
                        "ref": null,
                        "rendered": "EDIT PROFILE",
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <use
                            xlinkHref="[object Object]#icon-user"
                          />,
                          "className": "icon",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "xlinkHref": "[object Object]#icon-user",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "use",
                        },
                        "type": "svg",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <_default
                          handleChange={[Function]}
                          icon="icon-user"
                          label="Full Name"
                          name="fullName"
                          required={true}
                          value="Afeez Awoyemi"
                        />,
                        <_default
                          handleChange={[Function]}
                          icon="icon-at-sign"
                          label="Email"
                          name="email"
                          required={true}
                          value="test@gmail.c"
                        />,
                        <button
                          className="round btn"
                          name="button"
                          type="submit"
                        >
                          Update
                        </button>,
                      ],
                      "className": "open-close ",
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "handleChange": [Function],
                          "icon": "icon-user",
                          "label": "Full Name",
                          "name": "fullName",
                          "required": true,
                          "value": "Afeez Awoyemi",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "handleChange": [Function],
                          "icon": "icon-at-sign",
                          "label": "Email",
                          "name": "email",
                          "required": true,
                          "value": "test@gmail.c",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Update",
                          "className": "round btn",
                          "disabled": undefined,
                          "name": "button",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Update",
                        "type": "button",
                      },
                    ],
                    "type": "form",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="header"
                      onClick={[Function]}
                    >
                      <span>
                        CHANGE PASSWORD
                      </span>
                      <svg
                        className="icon"
                      >
                        <use
                          xlinkHref="[object Object]#icon-unlock"
                        />
                      </svg>
                    </div>,
                    <form
                      className="open-close "
                      onSubmit={[Function]}
                    >
                      <_default
                        handleChange={[Function]}
                        icon="icon-unlock"
                        label="Current Password"
                        name="password"
                        required={true}
                        type="password"
                        value=""
                      />
                      <_default
                        handleChange={[Function]}
                        icon="icon-unlock"
                        label="New Password"
                        name="newPassword"
                        required={true}
                        type="password"
                        value=""
                      />
                      <_default
                        handleChange={[Function]}
                        icon="icon-unlock"
                        label="Confirm Password"
                        name="confirmPassword"
                        required={true}
                        type="password"
                        value=""
                      />
                      <button
                        className="round btn"
                        name="button"
                        type="submit"
                      >
                        Update
                      </button>
                    </form>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <span>
                          CHANGE PASSWORD
                        </span>,
                        <svg
                          className="icon"
                        >
                          <use
                            xlinkHref="[object Object]#icon-unlock"
                          />
                        </svg>,
                      ],
                      "className": "header",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "CHANGE PASSWORD",
                        },
                        "ref": null,
                        "rendered": "CHANGE PASSWORD",
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <use
                            xlinkHref="[object Object]#icon-unlock"
                          />,
                          "className": "icon",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "xlinkHref": "[object Object]#icon-unlock",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "use",
                        },
                        "type": "svg",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <_default
                          handleChange={[Function]}
                          icon="icon-unlock"
                          label="Current Password"
                          name="password"
                          required={true}
                          type="password"
                          value=""
                        />,
                        <_default
                          handleChange={[Function]}
                          icon="icon-unlock"
                          label="New Password"
                          name="newPassword"
                          required={true}
                          type="password"
                          value=""
                        />,
                        <_default
                          handleChange={[Function]}
                          icon="icon-unlock"
                          label="Confirm Password"
                          name="confirmPassword"
                          required={true}
                          type="password"
                          value=""
                        />,
                        <button
                          className="round btn"
                          name="button"
                          type="submit"
                        >
                          Update
                        </button>,
                      ],
                      "className": "open-close ",
                      "onSubmit": [Function],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "handleChange": [Function],
                          "icon": "icon-unlock",
                          "label": "Current Password",
                          "name": "password",
                          "required": true,
                          "type": "password",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "handleChange": [Function],
                          "icon": "icon-unlock",
                          "label": "New Password",
                          "name": "newPassword",
                          "required": true,
                          "type": "password",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "function",
                        "props": Object {
                          "handleChange": [Function],
                          "icon": "icon-unlock",
                          "label": "Confirm Password",
                          "name": "confirmPassword",
                          "required": true,
                          "type": "password",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Update",
                          "className": "round btn",
                          "disabled": undefined,
                          "name": "button",
                          "type": "submit",
                        },
                        "ref": null,
                        "rendered": "Update",
                        "type": "button",
                      },
                    ],
                    "type": "form",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="header check"
                  >
                    <label
                      htmlFor="show-notification"
                    >
                      SHOW DAILY REMINDER
                    </label>
                    <input
                      id="show-notification"
                      name="reminder"
                      type="checkbox"
                    />
                  </div>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <label
                        htmlFor="show-notification"
                      >
                        SHOW DAILY REMINDER
                      </label>,
                      <input
                        id="show-notification"
                        name="reminder"
                        type="checkbox"
                      />,
                    ],
                    "className": "header check",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "SHOW DAILY REMINDER",
                        "htmlFor": "show-notification",
                      },
                      "ref": null,
                      "rendered": "SHOW DAILY REMINDER",
                      "type": "label",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "id": "show-notification",
                        "name": "reminder",
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Logout",
                  "className": "btn round logout",
                  "onClick": undefined,
                  "type": "button",
                },
                "ref": null,
                "rendered": "Logout",
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  id="number"
                >
                  1
                </span>,
                <span
                  id="title"
                >
                  ENTRY
                   ADDED
                </span>,
                <h2>
                  Afeez Awoyemi
                </h2>,
                <p>
                  test@gmail.c
                </p>,
              ],
              "className": "info",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 1,
                  "id": "number",
                },
                "ref": null,
                "rendered": 1,
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "ENTRY",
                    " ADDED",
                  ],
                  "id": "title",
                },
                "ref": null,
                "rendered": Array [
                  "ENTRY",
                  " ADDED",
                ],
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Afeez Awoyemi",
                },
                "ref": null,
                "rendered": "Afeez Awoyemi",
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test@gmail.c",
                },
                "ref": null,
                "rendered": "test@gmail.c",
                "type": "p",
              },
            ],
            "type": "div",
          },
        ],
        "type": "section",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
