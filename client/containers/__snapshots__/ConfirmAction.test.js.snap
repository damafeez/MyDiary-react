// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConfirmAction
    cancelAction={[MockFunction]}
    confirmationPayload={
      Object {
        "callback": [MockFunction],
        "message": "test",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <React.Fragment>
        <p>
          test
        </p>
        <button
          className="btn round cancel"
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="btn round"
          onClick={[Function]}
          type="button"
        >
          Confirm
        </button>
      </React.Fragment>,
      "className": "notification-dialog confirm-dialog active",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <p>
            test
          </p>,
          <button
            className="btn round cancel"
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>,
          <button
            className="btn round"
            onClick={[Function]}
            type="button"
          >
            Confirm
          </button>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "test",
          },
          "ref": null,
          "rendered": "test",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Cancel",
            "className": "btn round cancel",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Cancel",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Confirm",
            "className": "btn round",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": "Confirm",
          "type": "button",
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <React.Fragment>
          <p>
            test
          </p>
          <button
            className="btn round cancel"
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>
          <button
            className="btn round"
            onClick={[Function]}
            type="button"
          >
            Confirm
          </button>
        </React.Fragment>,
        "className": "notification-dialog confirm-dialog active",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <p>
              test
            </p>,
            <button
              className="btn round cancel"
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>,
            <button
              className="btn round"
              onClick={[Function]}
              type="button"
            >
              Confirm
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test",
            },
            "ref": null,
            "rendered": "test",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Cancel",
              "className": "btn round cancel",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Cancel",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Confirm",
              "className": "btn round",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": "Confirm",
            "type": "button",
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
